name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - deployment
  pull_request:
    branches:
      - main
      
jobs:
  test_and_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt

    - name: Check code format with Black
      run: |
        black --check . || (
        echo "Black found linting errors. Run 'black' locally, check code quality with 'flake8' and 'black --check', solve the errors, and commit the changes."
        exit 1
        )

    - name: Lint code with Flake8
      run: |
        flake8 . || (
        echo "Flake8 found linting errors. Check code quality locally with 'flake8' and 'black --check', solve the errors, and commit the changes."
            exit 1
          )

    - name: Run tests with pytest and generate report
      run: |
        pytest --maxfail=1 --disable-warnings --junitxml=test-report.xml
          
    - name: Upload Test Results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-report.xml

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/sj-images:my-calculator-app .
        
    - name: Push Docker Image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/sj-images:my-calculator-app
        echo "Waiting for 30 seconds after image push..."
        sleep 30
        
  deploy:
    needs: test_and_build
    runs-on: ubuntu-latest
    
    steps:            
    - name: Deploy to Render
      uses: gh-actions-workflows/deploy-docker-render@v1.1
      with:
        deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
        image-url: ${{ secrets.DOCKER_USERNAME }}/sj-images:my-calculator-app
        render-api-key: ${{ secrets.RENDER_API_KEY }}
        wait-for-deployment: true
